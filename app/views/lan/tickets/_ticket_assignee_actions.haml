- if ticket.assignee.present?
  -# If assignee is present, we display the name of the assignee
  .me-2.flex-grow-1
    = link_to ticket.assignee, target: :_blank do
      = icon %i[fas fa-arrow-up-right-from-square]
      = ticket.assignee.username

  -# Render the button if ticket is not checked in
  -  if ticket.checked_in?
    = button nil, nil, size: :sm, disabled: true, btn_icon: %i[fas fa-user-slash fa-fw], icon_only: true, color: :danger
  - else
    = button nil,
            remove_assignee_lan_ticket_path(id: ticket.id),
            size: :sm,
            method: :post,
            btn_icon: %i[fas fa-user-slash fa-fw],
            icon_only: true,
            html: { title: _('Ticket|Remove assignation') },
            color: :danger

- else
  .flex-grow-1{ data: { autocomplete: { 'url-value' => autocomplete_users_path, 'min-length-value' => '3' }, controller: 'autocomplete' } }
    = simple_form_for :assignee, url: assign_lan_ticket_path(ticket) do |f|
      .d-flex
        %input.form-control.rounded-0.string.py-0.seatmap-username-input.flex-grow-1{"data-autocomplete-target" => "input", placeholder: _('Users|Autocomplete|Type to search')}
        = f.input :user_id, label: false, input_html: { data: { "autocomplete-target" => "hidden" } }, as: :hidden, wrapper_html: { style:'margin-bottom: 0 !important;' }
        = f.save '>', style: 'border-radius: 0; width: 2.25rem;', class: %i[rounded-end btn-sm]
    %ul.shadow.user-autocomplete-popup.list-group{"data-autocomplete-target" => "results"}


  -# Also, if the current user does not have a ticket assigned yet for this lan,
  -# we display a "assign to myself" button
  - if op.ticket_for_lan_party.nil?
    .ms-2
      = button nil,
              assign_lan_ticket_path(id: ticket.id, user_id: current_user.id),
              size: :sm,
              method: :post,
              btn_icon: %i[fas fa-user-plus fa-fw],
              icon_only: true,
              html: { title: _('Ticket|Assign to myself') }

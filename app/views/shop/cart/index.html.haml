- provide :shop_page_title, _('Cart')
= render partial: 'shop/shared/header'

- if model.cart_items.none?
  .card
    .card-body
      = _('Cart|Your cart is empty')
- else
  .row
    .col-md-9
      .card
        .card-body
          %table.table.table-borderless
            %tr
              %th= _('Cart|Product')
              %th= _('Cart|Quantity')
              %th= _('Cart|Price')
              %th
            - model.cart_items.includes(product_variant: :product).order(:id).each do |cart_item|
              - if op.availability_error
                - if op.unavailable_products.include?(cart_item.product.id)
                  - additional_class = 'table-danger'
                  - remove_hint = true
                - elsif op.products_with_less_availability[cart_item.product.id].present?
                  - additional_class = 'table-warning'
                  - reduce_hint = true
              %tr{class: additional_class}
                %td
                  = link_to cart_item.product_variant.product.name, [:shop, cart_item.product_variant.product]
                  %br
                  %small.text-muted
                    = cart_item.product_variant.name
                %td.align-middle
                  .btn.pe-none
                    .d-inline-block{style: 'width: 3rem;'}
                      = cart_item.quantity
                    - if remove_hint
                      = icon %i[fas fa-circle-xmark fa-fw]
                    - elsif reduce_hint
                      = icon %i[fas fa-triangle-exclamation fa-fw]
                    - else
                      = icon %i[fas fa-fw]
                  = button nil, increase_quantity_shop_cart_item_path(cart_item),
                    btn_icon:         %i[fas fa-plus],
                    method:           :post,
                    icon_only:        true,
                    size:             :sm,
                    disable_on_click: true,
                    disabled:         op.quantity_requested_by_product[cart_item.product] >= op.availability_by_product[cart_item.product]
                  = button nil, decrease_quantity_shop_cart_item_path(cart_item),
                    btn_icon:         %i[fas fa-minus],
                    method:           :post,
                    icon_only:        true,
                    size:             :sm,
                    disable_on_click: true,
                    disabled:         cart_item.quantity <= 1
                %td
                  = humanized_money_with_symbol(cart_item.total)
                  %br
                  %small.text-muted
                    = _('Product|%{price} each') % { price: humanized_money_with_symbol(cart_item.product_variant.price) }
                %td.align-middle
                  = delete_button cart_item, namespace: %i[shop], icon_only: true, size: :sm
    .col-md-3
      .card
        .card-body
          .mb-3
            = _('Cart|Total:')
            = humanized_money_with_symbol(model.total)
          - if false && op.availability_error
            = button _('Cart|Checkout disabled'), nil, disabled: true
          - else
            = button _('Shop|Checkout'), shop_checkout_path

= simple_form_for [:admin, :shop, model] do |f|
  -# -- Basic inputs --------------------------------------------------------------
  .card.mb-3
    .card-header
      = _('Admin|Product|Basics')
    .card-body
      = f.input :name
      = f.markdown :description, preview_url: admin_markdown_preview_path,
                                 wrapper_html: { style: 'margin-bottom: 0 !important; min-height: 287px;' }
      .row
        .col-md-2
          = f.input :on_sale, input_html: { class: 'no-validation' }, as: :select, include_blank: false
        .col-md-5
          = f.input :sort
        .col-md-5
          = f.association :product_category, include_blank: _('Form|Select|Blank')
      .row
        .col-md-4
          = f.input :inventory, wrapper_html: { style: 'margin-bottom: 0 !important;' }
        .col-md-4
          = f.input :availability, disabled: true, wrapper_html: { style: 'margin-bottom: 0 !important;' }
        .col-md-4
          = f.input :total_inventory, disabled: true, wrapper_html: { style: 'margin-bottom: 0 !important;' }

  -# -- Product behaviours inputs -------------------------------------------------
  .card.mb-3
    .card-header
      = _('Admin|Product|Product behaviours')
    .card-body{ data: { controller: 'admin--product-behaviours' } }
      = f.input :enabled_product_behaviours,
        as: :check_boxes,
        collection: model.available_product_behaviours,
        input_html: { class: 'no-validation', data: { action: 'change->admin--product-behaviours#behavioursChanged' } },
        value_method: :first,
        label_method: :second

      - model.available_product_behaviour_classes.each do |behaviour|
        - enabled = model.enabled_product_behaviour_classes.include?(behaviour)
        = behaviour.render_view(f, model, enabled)

  -# -- Images inputs -------------------------------------------------------------
  .card.mb-3
    .card-header
      = _('Admin|Product|Images')
    .card-body
      = f.input :images, input_html: { multiple: true }, label: false
      - if model.images.attached?
        .row.px-2
          - model.images.each do |image|
            .col-md-4.text-center.p-1
              .border.border-secondary.p-1
                = image_tag image.variant(:thumb).processed
                .form-check
                  = f.check_box :remove_images, { multiple: true }, image.id, nil
                  = f.label :remove_images, _('Product|Remove this image'), for: "product_remove_images_#{image.id}"

  -# -- Variants inputs -----------------------------------------------------------
  .card.mb-3
    .card-header
      = _('Admin|Product|Product variants')
    .card-body
      #product-variants{ data: { controller: 'cocoon' } }
        = f.error :product_variants, class: 'invalid-feedback d-block'
        = f.simple_fields_for :product_variants do |product_variant|
          .nested-fields
            = render 'product_variant_fields', f: product_variant
        .links
          = link_to_add_association f, :product_variants, class: 'btn btn-primary', data: { action: 'click->cocoon#addRow' } do
            = icon %i[fa fa-plus]
            = _('Product|Add product variant')
    .card-footer
      = f.save

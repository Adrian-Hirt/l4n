- unless round.lower_bracket_only?
  -# Calculate the number of matches, which is 2 to the power of
  -# "current_round index", where the final has index 0 and earlier
  -# rounds have higher indices. We divide by 2 because we have double
  -# the rounds because of the lower bracket, and then make sure we
  -# have at least 1 match (for the last round).
  - number_of_matches = (2 ** ((round.round_number / 2) - total_visible_rounds).abs) / 2
  - number_of_matches = [1, number_of_matches].max

  - round_is_last_round = round.round_number == total_rounds

  -# Add one horizontal line when we're in the last round
  - if round_is_last_round
    .round-connectors-horizontal
      %div

  .tournament-round
    - if round.matches.any?
      - if round.first_round? || round_is_last_round
        - relevant_matches = round.matches.order(:id).includes(:winner, away: :team, home: :team)
      - else
        - relevant_matches = round.matches.order(:id).includes(:winner, away: :team, home: :team).first(number_of_matches)

      - relevant_matches.each do |match|
        %a.match{href: admin_match_path(match)}
          .d-flex.justify-content-between
            .matchteam
              = match.home.team.name
            .matchscore
              = format_match_score(match, :home)
          .d-flex.justify-content-between
            .matchteam
              = match.away&.team&.name || _('Match|Bye')
            .matchscore
              = format_match_score(match, :away)
    - else
      - number_of_matches.times do
        .match
          .d-flex.justify-content-between
            .matchteam
              = _('Match|Tbd')
            .matchscore
              &mdash;
          .d-flex.justify-content-between
            .matchteam
              = _('Match|Tbd')
            .matchscore
              &mdash;

  -# We don't need to do this after the last match
  - unless round_is_last_round

    -# Generate the outgoing horizontal connectors
    .round-connectors-horizontal
      - number_of_matches.times do
        %div

    -# Generate the vertical connectors
    .round-connectors-vertical{class: round_matches_to_inverse_round_index_word(number_of_matches)}
      - (number_of_matches / 2).times do
        %div

    -# Finally, generate the incoming horizontal connectors
    .round-connectors-horizontal
      - (number_of_matches / 2).times do
        %div
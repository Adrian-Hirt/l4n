.row
  .col-md-12
    .card
      .card-header
        = _('Phase|Rounds')
      .card-body
        - total_rounds = model.rounds.count
        - total_visible_rounds = total_rounds / 2

        %h4= _('Phase|Double elimination upper bracket')
        .double-elimination-tournament-tree.mb-4
          - model.rounds.order(:round_number).each do |round|
            - next if round.lower_bracket_only?

            -# Calculate the number of matches, which is 2 to the power of
            -# "current_round index", where the final has index 0 and earlier
            -# rounds have higher indices. We divide by 2 because we have double
            -# the rounds because of the lower bracket, and then make sure we
            -# have at least 1 match (for the last round).
            - number_of_matches = (2 ** ((round.round_number / 2) - total_visible_rounds).abs) / 2
            - number_of_matches = [1, number_of_matches].max

            -# Add one horizontal line when we're in the last round
            - if round.last_round?
              .round-connectors-horizontal
                %div

            .tournament-round
              - if round.matches.any?
                - if round.upper_bracket_only?
                  - relevant_matches = round.matches.order(:id).includes(:away_team, :home_team)
                - else
                  - relevant_matches = round.matches.order(:id).includes(:away_team, :home_team).first(number_of_matches)

                - relevant_matches.each do |match|
                  %a.match{href: admin_match_path(match)}
                    .d-flex.justify-content-between
                      .matchteam
                        = match.home_team.name
                      .matchscore
                        = format_match_score(match,  match.home_team)
                    .d-flex.justify-content-between
                      .matchteam
                        = match.away_team&.name || _('Match|Bye')
                      .matchscore
                        = format_match_score(match, match.away_team)
              - else
                - number_of_matches.times do
                  .match
                    .d-flex.justify-content-between
                      .matchteam
                        = _('Match|Tbd')
                      .matchscore
                        &mdash;
                    .d-flex.justify-content-between
                      .matchteam
                        = _('Match|Tbd')
                      .matchscore
                        &mdash;

            -# We don't need to do this after the last match
            - next if round.last_round?

            -# Generate the outgoing horizontal connectors
            .round-connectors-horizontal
              - number_of_matches.times do
                %div

            -# Generate the vertical connectors
            .round-connectors-vertical{class: round_matches_to_inverse_round_index_word(number_of_matches)}
              - (number_of_matches / 2).times do
                %div

            -# Finally, generate the incoming horizontal connectors
            .round-connectors-horizontal
              - (number_of_matches / 2).times do
                %div


        %h4= _('Phase|Double elimination lower bracket')
        .double-elimination-tournament-tree
          - model.rounds.order(:round_number).each_with_index do |round, index|
            - next if round.upper_bracket_only?

            - number_of_matches = (2 ** ((round.round_number / 2) - total_visible_rounds).abs) / 2
            - number_of_matches = [1, number_of_matches].max

            .tournament-round
              - if round.matches.any?
                - if round.lower_bracket_only?
                  - relevant_matches = round.matches.order(:id).includes(:away_team, :home_team)
                - else
                  - relevant_matches = round.matches.order(:id).includes(:away_team, :home_team).last(number_of_matches)

                - relevant_matches.each do |match|
                  %a.match{href: admin_match_path(match)}
                    .d-flex.justify-content-between
                      .matchteam
                        = match.home_team.name
                      .matchscore
                        = format_match_score(match,  match.home_team)
                    .d-flex.justify-content-between
                      .matchteam
                        = match.away_team&.name || _('Match|Bye')
                      .matchscore
                        = format_match_score(match, match.away_team)
              - else
                - number_of_matches.times do
                  .match
                    .d-flex.justify-content-between
                      .matchteam
                        = _('Match|Tbd')
                      .matchscore
                        &mdash;
                    .d-flex.justify-content-between
                      .matchteam
                        = _('Match|Tbd')
                      .matchscore
                        &mdash;

            -# We don't need to do this after the last match


            -# If we're in a "lower bracket only" round, we draw the
            -# connectors as usual, otherwise we only draw the horizontal
            -# lines.
            - if round.lower_bracket_only?
              -# Generate the outgoing horizontal connectors
              .round-connectors-horizontal
                - number_of_matches.times do
                  %div
              -# Generate the vertical connectors
              .round-connectors-vertical{class: round_matches_to_inverse_round_index_word(number_of_matches)}
                - (number_of_matches / 2).times do
                  %div

              -# Finally, generate the incoming horizontal connectors
              .round-connectors-horizontal
                - (number_of_matches / 2).times do
                  %div
            - else
              -# Generate the outgoing horizontal connectors
              .round-connectors-horizontal
                - number_of_matches.times do
                  %div
              .round-connectors-horizontal
                - number_of_matches.times do
                  %div
